import React, { Component, Fragment } from 'react';
import { Row, Col, DatePicker, Input } from 'antd';
import { connect } from 'umi';
import moment from 'moment';
// import editIcon from '@/assets/edit-off-boarding.svg';
import styles from './index.less';

const dateFormat = 'YYYY/MM/DD';
const { TextArea } = Input;

@connect(({ offboarding: { myRequest = {} } = {}, loading }) => ({
  myRequest,
  loading: loading.effects['offboarding/requestChangeLWD'],
}))
class RequestChangeLWD extends Component {
  // handleOpenEdit = () => {
  //   this.setState({ isEdit: true });
  // };

  handleChange = (e) => {
    this.setState({
      q: e.target.value,
    });
  };

  submitRequest = (values) => {
    const { dispatch, myRequest: { _id: id = '' } = {} } = this.props;
    const payload = { id, ...values };
    dispatch({
      type: 'offboarding/requestChangeLWD',
      payload,
    }).then(({ statusCode }) => {
      if (statusCode === 200) {
        this.handleModal();
      }
    });
  };

  saveComment = () => {
    const { q: commentRequestLastDate = '' } = this.state;
    const { dispatch, myRequest: { _id: id = '', requestLastDate = '' } = {} } = this.props;
    const payload = { id, requestLastDate, commentRequestLastDate };
    dispatch({
      type: 'offboarding/requestChangeLWD',
      payload,
      isUpdate: true,
    });
  };

  render() {
    const { myRequest: { lastWorkingDate = '', requestLastDate = '' } = {} } = this.props;
    const dateValue = moment(lastWorkingDate).format('YYYY/MM/DD');
    return (
      <div className={styles.viewChangeLastWorkingDay}>
        <p className={styles.viewChangeLastWorkingDay__title}>Resignation request details</p>
        <p className={styles.viewChangeLastWorkingDay__label}>
          Last working day (generated by system)
        </p>
        <Row className={styles.viewChangeLastWorkingDay__viewDateApproved} gutter={[50, 0]}>
          <Col span={8}>
            <DatePicker
              value={dateValue && moment(dateValue, dateFormat)}
              format={dateFormat}
              className={styles.viewChangeLastWorkingDay__viewDateApproved__datePicker}
              disabled
            />
          </Col>
          <Col span={16} className={styles.viewChangeLastWorkingDay__viewDateApproved__description}>
            <span className={styles.viewChangeLastWorkingDay__viewDateApproved__description__text1}>
              A last working date (LWD) is generated as per a 90 days notice period according to our{' '}
            </span>
            <span className={styles.viewChangeLastWorkingDay__viewDateApproved__description__text2}>
              Standard Resignation Policy
            </span>
          </Col>
        </Row>
        {requestLastDate && (
          <Fragment>
            <div className={styles.viewChangeLastWorkingDay__textMessage}>
              <span className={styles.viewChangeLastWorkingDay__textMessage__bold}>
                Extend and shorten LWD is sent to HR Manager
              </span>
              <span className={styles.viewChangeLastWorkingDay__textMessage__date}>
                {requestLastDate && moment(requestLastDate).format('YYYY/MM/DD')}
              </span>
            </div>
            <div className={styles.viewComment}>
              <div className={styles.viewTop}>
                <div className={styles.viewTop__name}>
                  Reporting managerâ€™s comments extend or shorten LWD
                </div>
              </div>
              <TextArea className={styles.boxComment} onChange={this.handleChange} disabled />
            </div>
          </Fragment>
        )}
      </div>
    );
  }
}

export default RequestChangeLWD;
